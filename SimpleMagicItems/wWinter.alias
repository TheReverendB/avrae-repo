<drac2>
a      = &ARGS&
ch     = character()
n      = '\n'
spells ={
  "Ray of Frost0": 0,
  "Ray of Frost1": 1,
  "Sleet Storm": 3,
  "Ice Storm": 4
}

# create the cc

cc= "Wand of Winter"
desc   = """This wand looks and feels like an icicle. You must be attuned to the wand to use it.\n\nThe wand has 7 charges, which are used to fuel the spells within it. With the wand in hand, you can use your action to cast one of the following spells from the wand, even if you are incapable of casting spells: ray of frost (no charges, or 1 charge to cast at 5th level; +5 to hit with ranged spell attack), sleet storm (3 charges; spell save DC 15), or ice storm (4 charges; spell save DC 15). No other components are required.\n\nThe wand regains 1d6 + 1 expended charges each day at dawn. If you expend the wandâ€™s last charge, roll a d20. On a 20, the wand melts away, forever destroyed."""
ch.create_cc_nx(cc, 0, 7, 'long', 'bubble', reset_by='1d6+1', desc = desc)


flavor = f'-color {color} -thumb https://www.dndbeyond.com/avatars/thumbnails/31629/850/1000/1000/638095604681713240.png'

# parse arguments
syntax=f'`{ctx.prefix+ctx.alias} "<spell>" [<cast arguments>][-i]`'


if not a or a[0].lower() in ['?','help']:
  return f'echo _ _\nUse: {syntax}.\nSupported options: {", ".join(spells.keys())}.'


# match the spell name
spell     = a[0].lower()
cast_args = ' '.join([f'"{x}"' if ' ' in x else x for x in a[1:]])


match = [sn for sn in spells if spell.lower() == sn.lower()]

if not match:
  match += [sn for sn in spells if spell.lower() in sn.lower()]
  if not match:
    return f'echo _ _\nUse: {syntax}.\n\nSupported spells: {", ".join(spells.keys())}\n(use `{ctx.prefix+ctx.alias} frost1` to use a charge or `{ctx.prefix+ctx.alias} frost0` to cast it for free).\nCase insensitive and partial name is supported.' + f'\n\n`Your entry: {spell}` did not match any spells.' if spell else ''
  if len(match)>1:
    return f'echo _ _\nMultiple spells match your entry `{spell}`: {", ".join(match)}.  Be more specific to cast.'

match = match[0]
cost  = spells[match]
ignore= argparse(a).get('i')

# adjust for our unique spell differentiations
if match=='Ray of Frost1':
  match = match[:-1]
  cast_args += ' -cantripdice 2 '
elif match=='Ray of Frost0':
  match = match[:-1]
  cast_args += ' -cantripdice 1 '

if ignore or cost==0:
  fields=f'''-f  "{cc} {'_use ignored_' if ignore else '_no charges_'}|{ch.cc_str(cc)}|inline" '''
else:
  # remove the charges
  current=ch.get_cc(cc)
  if cost>current:
    return f'echo  You do not have enough ({cost}) charges left on your {cc} to cast {match}:\n\n**{cc}**\n{ch.cc_str(cc)}'
  remaining = ch.mod_cc(cc,-cost)
  fields=f' -f "{cc} (-{cost})|{ch.cc_str(cc)}|inline" '


#output alias
nn = '\n\n'

return f'''cast "{match}" -dc 15 {cast_args} -phrase "with their {cc}" -i -f "{desc.split(nn)[1]}" {fields} {flavor} '''
</drac2>